08:18:18.549 [qtp1825419935-17] INFO  anubis-logger - Guest access "authenticated" successfully.
08:18:18.567 [qtp1825419935-17] DEBUG anubis-logger - Authorizing access to /auth/token based on permission: ApplicationPermission{servletPathSegmentMatchers='/auth/token', allowedOperation=CHANGE}
08:18:18.643 [Test Cluster-worker-1] WARN  com.datastax.driver.core.Cluster - Re-preparing already prepared query SELECT "name" AS col1,"description" AS col2,"redirect_uri" AS col3,"vendor" AS col4,"homepage" AS col5 FROM seshat.clients WHERE "name"=?;. Please note that preparing the same query more than once is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once.
08:18:18.678 [Test Cluster-worker-1] WARN  com.datastax.driver.core.Cluster - Re-preparing already prepared query SELECT "name" AS col1,"passwordword" AS col2,"salt" AS col3,"iteration_count" AS col4,"expires_in_days" AS col5,"password_reset_on" AS col6 FROM seshat.users WHERE "name"=?;. Please note that preparing the same query more than once is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once.
08:18:18.709 [Test Cluster-worker-1] WARN  com.datastax.driver.core.Cluster - Re-preparing already prepared query SELECT "name" AS col1,"secret" AS col2 FROM seshat.config WHERE "name"=?;. Please note that preparing the same query more than once is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once.
08:18:19.599 [qtp1825419935-15] INFO  anubis-logger - System token for user wepemnefret, with key timestamp 2018-09-03T13_10_30 authenticated successfully.
08:18:19.602 [qtp1825419935-15] DEBUG anubis-logger - Authorizing access to /applications/identity-v1 based on permission: ApplicationPermission{servletPathSegmentMatchers='/applications/*', allowedOperation=DELETE}
08:18:20.431 [qtp1825419935-13] INFO  anubis-logger - System token for user wepemnefret, with key timestamp 2018-09-03T13_10_30 authenticated successfully.
08:18:20.434 [qtp1825419935-13] DEBUG anubis-logger - Authorizing access to /applications based on permission: ApplicationPermission{servletPathSegmentMatchers='/applications/*', allowedOperation=READ}
08:18:21.050 [qtp1825419935-17] INFO  anubis-logger - System token for user wepemnefret, with key timestamp 2018-09-03T13_10_30 authenticated successfully.
08:18:21.052 [qtp1825419935-17] DEBUG anubis-logger - Authorizing access to /tenants based on permission: ApplicationPermission{servletPathSegmentMatchers='/tenants', allowedOperation=READ}
08:21:40.011 [qtp1825419935-15] INFO  anubis-logger - Guest access "authenticated" successfully.
08:21:40.012 [qtp1825419935-15] DEBUG anubis-logger - Authorizing access to /auth/token based on permission: ApplicationPermission{servletPathSegmentMatchers='/auth/token', allowedOperation=CHANGE}
08:21:40.029 [Test Cluster-worker-2] WARN  com.datastax.driver.core.Cluster - Re-preparing already prepared query SELECT "name" AS col1,"description" AS col2,"redirect_uri" AS col3,"vendor" AS col4,"homepage" AS col5 FROM seshat.clients WHERE "name"=?;. Please note that preparing the same query more than once is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once.
08:21:40.048 [Test Cluster-worker-2] WARN  com.datastax.driver.core.Cluster - Re-preparing already prepared query SELECT "name" AS col1,"passwordword" AS col2,"salt" AS col3,"iteration_count" AS col4,"expires_in_days" AS col5,"password_reset_on" AS col6 FROM seshat.users WHERE "name"=?;. Please note that preparing the same query more than once is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once.
08:21:40.055 [Test Cluster-worker-2] WARN  com.datastax.driver.core.Cluster - Re-preparing already prepared query SELECT "name" AS col1,"secret" AS col2 FROM seshat.config WHERE "name"=?;. Please note that preparing the same query more than once is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once.
08:21:41.011 [qtp1825419935-13] INFO  anubis-logger - System token for user wepemnefret, with key timestamp 2018-09-03T13_10_30 authenticated successfully.
08:21:41.012 [qtp1825419935-13] DEBUG anubis-logger - Authorizing access to /applications based on permission: ApplicationPermission{servletPathSegmentMatchers='/applications', allowedOperation=CHANGE}
08:21:41.769 [qtp1825419935-17] INFO  anubis-logger - System token for user wepemnefret, with key timestamp 2018-09-03T13_10_30 authenticated successfully.
08:21:41.770 [qtp1825419935-17] DEBUG anubis-logger - Authorizing access to /applications based on permission: ApplicationPermission{servletPathSegmentMatchers='/applications/*', allowedOperation=READ}
08:21:42.465 [qtp1825419935-15] INFO  anubis-logger - System token for user wepemnefret, with key timestamp 2018-09-03T13_10_30 authenticated successfully.
08:21:42.466 [qtp1825419935-15] DEBUG anubis-logger - Authorizing access to /tenants based on permission: ApplicationPermission{servletPathSegmentMatchers='/tenants', allowedOperation=READ}
08:22:09.464 [qtp1825419935-13] INFO  anubis-logger - Guest access "authenticated" successfully.
08:22:09.465 [qtp1825419935-13] DEBUG anubis-logger - Authorizing access to /auth/token based on permission: ApplicationPermission{servletPathSegmentMatchers='/auth/token', allowedOperation=CHANGE}
08:22:09.486 [Test Cluster-worker-2] WARN  com.datastax.driver.core.Cluster - Re-preparing already prepared query SELECT "name" AS col1,"description" AS col2,"redirect_uri" AS col3,"vendor" AS col4,"homepage" AS col5 FROM seshat.clients WHERE "name"=?;. Please note that preparing the same query more than once is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once.
08:22:09.494 [Test Cluster-worker-2] WARN  com.datastax.driver.core.Cluster - Re-preparing already prepared query SELECT "name" AS col1,"passwordword" AS col2,"salt" AS col3,"iteration_count" AS col4,"expires_in_days" AS col5,"password_reset_on" AS col6 FROM seshat.users WHERE "name"=?;. Please note that preparing the same query more than once is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once.
08:22:09.511 [Test Cluster-worker-2] WARN  com.datastax.driver.core.Cluster - Re-preparing already prepared query SELECT "name" AS col1,"secret" AS col2 FROM seshat.config WHERE "name"=?;. Please note that preparing the same query more than once is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once.
08:22:10.269 [qtp1825419935-17] INFO  anubis-logger - System token for user wepemnefret, with key timestamp 2018-09-03T13_10_30 authenticated successfully.
08:22:10.271 [qtp1825419935-17] DEBUG anubis-logger - Authorizing access to /applications based on permission: ApplicationPermission{servletPathSegmentMatchers='/applications/*', allowedOperation=READ}
08:22:10.986 [qtp1825419935-15] INFO  anubis-logger - System token for user wepemnefret, with key timestamp 2018-09-03T13_10_30 authenticated successfully.
08:22:10.998 [qtp1825419935-15] DEBUG anubis-logger - Authorizing access to /tenants based on permission: ApplicationPermission{servletPathSegmentMatchers='/tenants', allowedOperation=READ}
08:22:11.615 [qtp1825419935-13] INFO  anubis-logger - System token for user wepemnefret, with key timestamp 2018-09-03T13_10_30 authenticated successfully.
08:22:11.618 [qtp1825419935-13] DEBUG anubis-logger - Authorizing access to /tenants/playground/identityservice based on permission: ApplicationPermission{servletPathSegmentMatchers='/tenants/*/identityservice', allowedOperation=CHANGE}
08:22:11.628 [qtp1825419935-13] INFO  provisioner-logger - Assigning identity manager for tenant 'playground'.
08:22:11.762 [qtp1825419935-13] DEBUG provisioner-logger - Initial password for tenant super user 'playground' is 'ChangeThisPassword'. This should be changed immediately.
08:22:11.763 [qtp1825419935-13] DEBUG provisioner-logger - Salt is [89, 87, 53, 48, 98, 50, 53, 53, 99, 71, 120, 104, 101, 87, 100, 121, 98, 51, 86, 117, 90, 71, 90, 112, 98, 109, 86, 121, 89, 87, 78, 48, 76, 109, 70, 119, 89, 87, 78, 111, 90, 83, 53, 118, 99, 109, 99, 61]
08:22:11.763 [qtp1825419935-13] DEBUG provisioner-logger - Encoded password Q2hhbmdlVGhpc1Bhc3N3b3Jk
08:22:11.795 [qtp1825419935-13] DEBUG provisioner-logger - Hashed password: [53, -96, -83, -107, 2, -118, 46, 7, -63, -65, 55, -40, -64, 93, -103, -17, -10, 120, 52, 66, 86, 102, 114, -122, -39, -55, 80, -100, 1, -75, 51, -1]
08:22:11.795 [qtp1825419935-13] DEBUG provisioner-logger - Encoded password Q2hhbmdlVGhpc1Bhc3N3b3Jk
08:22:11.795 [qtp1825419935-13] DEBUG provisioner-logger - Encoded password [Q, 2, h, h, b, m, d, l, V, G, h, p, c, 1, B, h, c, 3, N, 3, b, 3, J, k]
08:22:11.795 [qtp1825419935-13] DEBUG provisioner-logger - Encoded hased password: NaCtlQKKLgfBvzfYwF2Z7/Z4NEJWZnKG2clQnAG1M/8=
08:22:12.725 [qtp1825419935-13] WARN  provisioner-logger - The given identity instance didn't recognize the system token as valid.
org.apache.fineract.cn.api.util.InvalidTokenException: {"timestamp":1536222132642,"status":403,"error":"Forbidden","message":"Access Denied","path":"/identity-v1/initialize"}
	at org.apache.fineract.cn.api.util.AnnotatedErrorDecoder.getAlternative(AnnotatedErrorDecoder.java:74)
	at org.apache.fineract.cn.api.util.AnnotatedErrorDecoder.decode(AnnotatedErrorDecoder.java:65)
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:138)
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:76)
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:103)
	at com.sun.proxy.$Proxy154.initialize(Unknown Source)
	at org.apache.fineract.cn.provisioner.internal.service.applications.IdentityServiceInitializer.initializeIsis(IdentityServiceInitializer.java:139)
	at org.apache.fineract.cn.provisioner.internal.service.TenantService.assignIdentityManager(TenantService.java:117)
	at org.apache.fineract.cn.provisioner.rest.controller.ProvisionerRestController.assignIdentityManager(ProvisionerRestController.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:221)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:114)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:963)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:897)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:648)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:729)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:845)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1689)
	at org.eclipse.jetty.websocket.server.WebSocketUpgradeFilter.doFilter(WebSocketUpgradeFilter.java:225)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1676)
	at org.springframework.boot.web.filter.ApplicationContextHeaderFilter.doFilterInternal(ApplicationContextHeaderFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1676)
	at org.apache.fineract.cn.lang.config.ServiceExceptionFilter.doFilterInternal(ServiceExceptionFilter.java:44)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1676)
	at org.springframework.boot.actuate.trace.WebRequestTraceFilter.doFilterInternal(WebRequestTraceFilter.java:105)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1676)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1676)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:89)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1676)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1676)
	at org.apache.fineract.cn.anubis.filter.UserContextFilter.doFilterInternal(UserContextFilter.java:51)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1676)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:317)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:115)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:169)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.authentication.preauth.AbstractPreAuthenticatedProcessingFilter.doFilter(AbstractPreAuthenticatedProcessingFilter.java:121)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:66)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:214)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1676)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1676)
	at org.springframework.boot.actuate.autoconfigure.MetricsFilter.doFilterInternal(MetricsFilter.java:107)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1676)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:581)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:143)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:548)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:226)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1180)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:511)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:185)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1112)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:141)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:134)
	at org.eclipse.jetty.server.Server.handle(Server.java:524)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:319)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:253)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:273)
	at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:95)
	at org.eclipse.jetty.io.SelectChannelEndPoint$2.run(SelectChannelEndPoint.java:93)
	at org.eclipse.jetty.util.thread.strategy.ExecuteProduceConsume.executeProduceConsume(ExecuteProduceConsume.java:303)
	at org.eclipse.jetty.util.thread.strategy.ExecuteProduceConsume.produceConsume(ExecuteProduceConsume.java:148)
	at org.eclipse.jetty.util.thread.strategy.ExecuteProduceConsume.run(ExecuteProduceConsume.java:136)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:671)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$2.run(QueuedThreadPool.java:589)
	at java.lang.Thread.run(Thread.java:748)
08:22:12.728 [qtp1825419935-13] INFO  o.a.f.c.l.c.ServiceExceptionFilter - Responding with a service error ServiceError{code=409, message='The given identity instance didnt recognize the system token as valid.  Perhaps the system keys for the provisioner or for the identity manager are misconfigured?'}
08:22:13.412 [qtp1825419935-17] INFO  anubis-logger - System token for user wepemnefret, with key timestamp 2018-09-03T13_10_30 authenticated successfully.
08:22:13.415 [qtp1825419935-17] DEBUG anubis-logger - Authorizing access to /tenants/playground/applications based on permission: ApplicationPermission{servletPathSegmentMatchers='/tenants/*/applications', allowedOperation=READ}

